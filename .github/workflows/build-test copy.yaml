name: Splunk App CI/CD 2

on:
  push:
    branches:
      - "**"
    tags:
      - "v*.*.*"

jobs:
  package:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install poetry
        run: pipx install poetry
      - uses: actions/setup-python@v5
        with:
          python-version: "3.7"
          cache: "poetry"
          architecture: "x64"
      - name: "Setup Environment"
        run: |
          poetry install --no-root

      - name: Generate Documentation
        run: |
          cat README.md | sed 's/package\/appserver/appserver/g' > package/README.md
          poetry run grip README.md --export README.html --title ""
          #poetry run pandoc -s README.html -o package/README.pdf

      - name: Generate Addon
        run: |
          echo "Version is now calculated by ucc-gen"
          [ -f ./globalConfig.json ] && poetry run ucc-gen -o output -v || poetry run scripts/build.sh
          mv output/$(basename $(pwd)) output/app
          echo "Fix to allow boto3 to be uploaded"
          sed -i.bak -e '267,282d' output/app/lib/botocore/session.py
          rm -f output/app/lib/botocore/session.py.bak

      - name: Generating package
        run: make dist

      - name: Inspect package
        run: |
          PACKAGE_ID=$(basename $(pwd))
          PACKAGE=$(ls dist/*)
          mkdir -p reports
          poetry run splunk-appinspect inspect $PACKAGE --mode=precert --included-tags=private_victoria --data-format junitxml --output-file reports/$PACKAGE_ID-appinspect-cli.xml

      - name: Upload Splunkbase package artifact
        uses: actions/upload-artifact@v2
        with:
          name: splunkbase-package
          path: build/package/splunkbase

      - name: Upload Deployment package artifact
        uses: actions/upload-artifact@v2
        with:
          name: deployment-package
          path: build/package/deployment

      - name: Upload Reports
        uses: actions/upload-artifact@v2
        with:
          name: reports
          path: reports

  publish-gh:
    needs: package
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    container: cimg/go:1.19
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          path: /tmp/workspace

      - name: "Publish on GitHub"
        run: |
          go install github.com/tcnksm/ghr@latest
          ISPRE=""
          [[ "${GITHUB_REF}" =~ ^refs/tags/v[0-9]*.[0-9]*.[0-9]*$ ]] || ISPRE="-prerelease"
          $HOME/go/bin/ghr -t ${GH_TOKEN} -u ${GITHUB_REPOSITORY_OWNER} -r $(basename ${GITHUB_REPOSITORY}) -c ${GITHUB_SHA} ${ISPRE} -delete "${GITHUB_REF_NAME}" /tmp/workspace/splunkbase-package
          $HOME/go/bin/ghr -t ${GH_TOKEN} -u ${GITHUB_REPOSITORY_OWNER} -r $(basename ${GITHUB_REPOSITORY}) -c ${GITHUB_SHA} ${ISPRE} "${GITHUB_REF_NAME}" /tmp/workspace/deployment-package

env:
  GH_TOKEN: ${{ secrets.GH_TOKEN }}
